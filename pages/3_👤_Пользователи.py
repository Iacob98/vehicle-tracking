import streamlit as st
from database import execute_query
from auth import require_auth, show_org_header, is_admin

# Page config
st.set_page_config(
    page_title="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
    page_icon="üë§",
    layout="wide"
)

# Require authentication
user = require_auth()
if not user:
    st.stop()

# Show header
show_org_header()

# Admin check
if not is_admin():
    st.error("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.")
    st.stop()

st.title("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã")

# Simple users list
try:
    users = execute_query("""
        SELECT 
            u.id,
            u.first_name,
            u.last_name,
            u.role,
            u.email
        FROM users u
        WHERE u.organization_id = :org_id
        ORDER BY u.first_name, u.last_name
    """, {'org_id': str(user.organization_id)})
    
    if users:
        st.write(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
        for usr in users:
            st.write(f"- {usr[1]} {usr[2]} ({usr[3]}) - {usr[4]}")
    else:
        st.write("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞: {str(e)}")
    import traceback
    st.code(traceback.format_exc())