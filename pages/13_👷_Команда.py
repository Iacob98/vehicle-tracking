import streamlit as st
from auth import require_auth, is_admin, is_manager
from models import TeamMember, TeamMemberDocument, Team, WorkerCategory
from database import SessionLocal
from datetime import date
import pandas as pd

# –¢—Ä–µ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
require_auth()

st.title("üë∑ –ö–æ–º–∞–Ω–¥–∞")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
user_role = st.session_state.get('user_role', '')
user_org_id = st.session_state.get('organization_id')

if not user_org_id:
    st.error("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ.")
    st.stop()

if user_role not in ['admin', 'owner', 'manager']:
    st.error("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –∏ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥–æ–π.")
    st.stop()

# –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
tab1, tab2 = st.tabs(["üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥—ã", "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"])

with tab1:
    st.subheader("üìã –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã")
    
    try:
        with SessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ç–µ–∫—É—â–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
            members = session.query(TeamMember).filter_by(
                organization_id=user_org_id
            ).all()
            
            if members:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                member_data = []
                for member in members:
                    team_name = ""
                    if member.team_id:
                        team = session.query(Team).filter_by(id=member.team_id).first()
                        team_name = team.name if team else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
                    
                    member_data.append({
                        'ID': member.id,
                        '–ò–º—è': member.name,
                        '–¢–µ–ª–µ—Ñ–æ–Ω': member.phone or "–ù–µ —É–∫–∞–∑–∞–Ω",
                        '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': member.category.value if member.category else "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                        '–ë—Ä–∏–≥–∞–¥–∞': team_name,
                        '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è': member.created_at.strftime('%d.%m.%Y') if member.created_at else ""
                    })
                
                df = pd.DataFrame(member_data)
                st.dataframe(df, use_container_width=True)
                
                st.write(f"**–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {len(members)}")
            else:
                st.info("üìù –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥—ã –ø–æ–∫–∞ –Ω–µ—Ç")
                
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")

with tab2:
    st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã")
    
    try:
        with SessionLocal() as session:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –±—Ä–∏–≥–∞–¥
            teams = session.query(Team).filter_by(
                organization_id=user_org_id
            ).all()
            
            team_options = {"–ù–µ –≤—ã–±—Ä–∞–Ω–∞": None}
            for team in teams:
                team_options[team.name] = team.id
            
            with st.form("add_team_member"):
                col1, col2 = st.columns(2)
                
                with col1:
                    member_name = st.text_input("–ò–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞*", placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è")
                    member_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω", placeholder="+7 xxx xxx xx xx")
                
                with col2:
                    # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤
                    category_options = [
                        "–ù–µ —É–∫–∞–∑–∞–Ω–∞",
                        "driver", 
                        "mechanic", 
                        "helper", 
                        "supervisor"
                    ]
                    selected_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∞–±–æ—Ç–Ω–∏–∫–∞", category_options)
                    
                    selected_team = st.selectbox("–ë—Ä–∏–≥–∞–¥–∞", list(team_options.keys()))
                
                notes = st.text_area("–ó–∞–º–µ—Ç–∫–∏", placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
                
                if st.form_submit_button("üíæ –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞"):
                    if not member_name:
                        st.error("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞")
                    else:
                        try:
                            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
                            new_member = TeamMember(
                                name=member_name,
                                phone=member_phone if member_phone else None,
                                category=WorkerCategory(selected_category) if selected_category != "–ù–µ —É–∫–∞–∑–∞–Ω–∞" else None,
                                team_id=team_options[selected_team],
                                notes=notes if notes else None,
                                organization_id=user_org_id
                            )
                            
                            session.add(new_member)
                            session.commit()
                            
                            st.success(f"‚úÖ –£—á–∞—Å—Ç–Ω–∏–∫ {member_name} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
                            st.rerun()
                            
                        except Exception as e:
                            session.rollback()
                            st.error(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞: {str(e)}")
            
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º: {str(e)}")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
st.markdown("---")
st.info("üí° **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:** –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ")