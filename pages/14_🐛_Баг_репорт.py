import streamlit as st
import os
from datetime import datetime
from telegram_bot import send_bug_report_sync
from auth import require_auth, show_org_header
from database import execute_query

# Page config
st.set_page_config(
    page_title="–ë–∞–≥ —Ä–µ–ø–æ—Ä—Ç",
    page_icon="üêõ",
    layout="wide"
)

# Require authentication
require_auth()
show_org_header()

# Get user info
user_email = st.session_state.get('user_email', 'unknown')
user_name = st.session_state.get('user_name', 'Unknown')
user_role = st.session_state.get('user_role', 'unknown')
user_id = st.session_state.get('user_id', 'unknown')
organization_id = st.session_state.get('organization_id', 'unknown')
organization_name = st.session_state.get('organization_name', 'Unknown Organization')

# Main page
st.title("üêõ –ë–∞–≥ —Ä–µ–ø–æ—Ä—Ç / Bug Report")

# Check if Telegram bot is configured
bot_configured = os.getenv('TELEGRAM_BOT_TOKEN') is not None

if not bot_configured:
    st.warning("‚ö†Ô∏è Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
    st.info("üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

# Create two columns
col1, col2 = st.columns([2, 1])

with col1:
    st.subheader("üìù –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ / Report an Issue")
    
    with st.form("bug_report_form"):
        # Bug report fields
        bug_category = st.selectbox(
            "üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–±–ª–µ–º—ã / Problem Category",
            [
                "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ / Critical Error",
                "üü° –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç / Feature Not Working",
                "üü¢ –£–ª—É—á—à–µ–Ω–∏–µ / Improvement",
                "üîµ –í–æ–ø—Ä–æ—Å / Question",
                "‚ö™ –î—Ä—É–≥–æ–µ / Other"
            ]
        )
        
        bug_title = st.text_input(
            "üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫ / Title *",
            placeholder="–ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É / Brief description",
            help="–ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤"
        )
        
        bug_description = st.text_area(
            "üìÑ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ / Detailed Description *",
            placeholder="–û–ø–∏—à–∏—Ç–µ —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –∫–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏–≤–µ–ª–∏ –∫ –æ—à–∏–±–∫–µ / Describe what happened",
            height=150,
            help="–ß–µ–º –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —Ç–µ–º –±—ã—Å—Ç—Ä–µ–µ –º—ã —Ä–µ—à–∏–º –ø—Ä–æ–±–ª–µ–º—É"
        )
        
        # Steps to reproduce
        steps_to_reproduce = st.text_area(
            "üîÑ –®–∞–≥–∏ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è / Steps to Reproduce",
            placeholder="1. –û—Ç–∫—Ä—ã–ª —Å—Ç—Ä–∞–Ω–∏—Ü—É...\n2. –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É...\n3. –ü–æ–ª—É—á–∏–ª –æ—à–∏–±–∫—É...",
            height=100
        )
        
        # Expected vs Actual behavior
        col_exp, col_act = st.columns(2)
        with col_exp:
            expected_behavior = st.text_area(
                "‚úÖ –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ / Expected",
                placeholder="–ß—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏",
                height=80
            )
        with col_act:
            actual_behavior = st.text_area(
                "‚ùå –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ / Actual",
                placeholder="–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ",
                height=80
            )
        
        # Page where error occurred
        page_with_error = st.selectbox(
            "üìç –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ—à–∏–±–∫–æ–π / Page with Error",
            [
                "–ì–ª–∞–≤–Ω–∞—è / Home",
                "üöó –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ / Vehicles",
                "üë∑ –ë—Ä–∏–≥–∞–¥—ã / Teams",
                "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ / Users",
                "üöö –®—Ç—Ä–∞—Ñ—ã / Penalties",
                "üì¶ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã / Materials",
                "üí∞ –†–∞—Å—Ö–æ–¥—ã –Ω–∞ –∞–≤—Ç–æ / Vehicle Expenses",
                "üí∞ –†–∞—Å—Ö–æ–¥—ã / Expenses",
                "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ / Analytics",
                "üîÑ –í–æ–∑–≤—Ä–∞—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è / Equipment Return",
                "üè¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º / Account Management",
                "–î—Ä—É–≥–∞—è / Other"
            ]
        )
        
        # Priority
        priority = st.radio(
            "‚ö° –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç / Priority",
            ["üî¥ –í—ã—Å–æ–∫–∏–π / High", "üü° –°—Ä–µ–¥–Ω–∏–π / Medium", "üü¢ –ù–∏–∑–∫–∏–π / Low"],
            horizontal=True
        )
        
        # Screenshot upload
        screenshot = st.file_uploader(
            "üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏ / Error Screenshot",
            type=['png', 'jpg', 'jpeg'],
            help="–ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã"
        )
        
        # Additional info
        additional_info = st.text_area(
            "‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è / Additional Info",
            placeholder="–õ—é–±–∞—è –¥—Ä—É–≥–∞—è –ø–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            height=80
        )
        
        # Submit button
        submitted = st.form_submit_button(
            "üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç / Send Report",
            use_container_width=True,
            type="primary"
        )
        
        if submitted:
            if not bug_title:
                st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ / Please provide a title")
            elif not bug_description:
                st.error("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É / Please describe the issue")
            else:
                # Prepare bug report data
                full_description = f"""
–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {bug_category}

–û–ø–∏—Å–∞–Ω–∏–µ:
{bug_description}

–®–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:
{steps_to_reproduce if steps_to_reproduce else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

–û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ: {expected_behavior if expected_behavior else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
–§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ: {actual_behavior if actual_behavior else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}

–°—Ç—Ä–∞–Ω–∏—Ü–∞: {page_with_error}
–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {priority}

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
{additional_info if additional_info else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}
                """
                
                # User info for report
                user_info = {
                    'user_name': user_name,
                    'user_email': user_email,
                    'user_role': user_role,
                    'user_id': user_id,
                    'organization_name': organization_name,
                    'organization_id': organization_id,
                    'timestamp': datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                }
                
                # Handle screenshot if provided
                photo_path = None
                if screenshot:
                    # Save screenshot temporarily
                    photo_path = f"/tmp/bug_screenshot_{datetime.now().strftime('%Y%m%d_%H%M%S')}.{screenshot.name.split('.')[-1]}"
                    with open(photo_path, "wb") as f:
                        f.write(screenshot.getbuffer())
                
                # Send to Telegram
                if bot_configured:
                    with st.spinner("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–ø–æ—Ä—Ç–∞... / Sending report..."):
                        try:
                            # Send bug report via Telegram
                            success = send_bug_report_sync(
                                chat_id="974628307",  # Will be overridden to hardcoded value
                                title=bug_title,
                                description=full_description,
                                user_info=user_info,
                                photo_path=photo_path
                            )
                            
                            if success:
                                st.success("‚úÖ –†–µ–ø–æ—Ä—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
                                st.balloons()
                                
                                # Save to database for tracking
                                try:
                                    execute_query("""
                                        INSERT INTO bug_reports (
                                            user_id, organization_id, title, description, 
                                            category, priority, page, status, created_at
                                        ) VALUES (
                                            :user_id, :org_id, :title, :description,
                                            :category, :priority, :page, 'new', :created_at
                                        )
                                    """, {
                                        'user_id': user_id,
                                        'org_id': organization_id,
                                        'title': bug_title,
                                        'description': full_description,
                                        'category': bug_category.split('/')[0].strip(),
                                        'priority': priority.split('/')[0].strip(),
                                        'page': page_with_error,
                                        'created_at': datetime.now()
                                    })
                                except:
                                    pass  # Table might not exist
                                
                                # Clear form
                                st.rerun()
                            else:
                                st.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–ø–æ—Ä—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                        except Exception as e:
                            st.error(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
                        finally:
                            # Clean up temporary file
                            if photo_path and os.path.exists(photo_path):
                                os.remove(photo_path)
                else:
                    st.error("‚ùå Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

with col2:
    st.subheader("‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è / Information")
    
    # Status card
    st.info("""
    **üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:**
    
    Telegram: @support_fleet
    Email: support@fleet.com
    –¢–µ–ª–µ—Ñ–æ–Ω: +49 xxx xxx xxxx
    """)
    
    # Guidelines
    st.markdown("""
    ### üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
    
    **–•–æ—Ä–æ—à–∏–π –±–∞–≥ —Ä–µ–ø–æ—Ä—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç:**
    - ‚úÖ –ü–æ–Ω—è—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
    - ‚úÖ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
    - ‚úÖ –®–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    - ‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—à–∏–±–∫–∏
    - ‚úÖ –í–µ—Ä—Å–∏—é –±—Ä–∞—É–∑–µ—Ä–∞
    
    **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:**
    - üî¥ **–í—ã—Å–æ–∫–∏–π** - –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É
    - üü° **–°—Ä–µ–¥–Ω–∏–π** - –º–µ—à–∞–µ—Ç —Ä–∞–±–æ—Ç–µ
    - üü¢ **–ù–∏–∑–∫–∏–π** - –∫–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–µ
    """)
    
    # Recent reports info
    st.markdown("### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    try:
        # Try to get statistics if table exists
        stats = execute_query("""
            SELECT 
                COUNT(*) as total,
                COUNT(CASE WHEN status = 'resolved' THEN 1 END) as resolved,
                COUNT(CASE WHEN status = 'in_progress' THEN 1 END) as in_progress,
                COUNT(CASE WHEN status = 'new' THEN 1 END) as new
            FROM bug_reports
            WHERE organization_id = :org_id
            AND created_at >= CURRENT_DATE - INTERVAL '30 days'
        """, {'org_id': organization_id})
        
        if stats and len(stats) > 0:
            total, resolved, in_progress, new = stats[0]
            
            col_stat1, col_stat2 = st.columns(2)
            with col_stat1:
                st.metric("üìù –í—Å–µ–≥–æ", total)
                st.metric("‚úÖ –†–µ—à–µ–Ω–æ", resolved)
            with col_stat2:
                st.metric("üîÑ –í —Ä–∞–±–æ—Ç–µ", in_progress)
                st.metric("üÜï –ù–æ–≤—ã–µ", new)
    except:
        st.info("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

# Footer
st.markdown("---")
st.markdown("""
<div style='text-align: center; color: gray;'>
    <p>üí° –í–∞—à–∏ –æ—Ç–∑—ã–≤—ã –ø–æ–º–æ–≥–∞—é—Ç –Ω–∞–º –¥–µ–ª–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ª—É—á—à–µ!</p>
    <p>Your feedback helps us improve the system!</p>
</div>
""", unsafe_allow_html=True)