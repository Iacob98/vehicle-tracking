import { z } from 'zod';

/**
 * Penalty Schema - Form Validation
 *
 * Matches database constraints from migration 007:
 * - amount: positive (> 0)
 * - date: required
 * - status: NOT NULL (default: 'open')
 * - vehicle_id: required (FK)
 * - user_id: optional (FK)
 */

// Penalty status enum
export const penaltyStatusSchema = z.enum(['open', 'paid', 'contested', 'cancelled'], {
  errorMap: () => ({ message: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å —à—Ç—Ä–∞—Ñ–∞' }),
});

// Main penalty schema
export const penaltySchema = z.object({
  vehicle_id: z
    .string({ required_error: '–í—ã–±–µ—Ä–∏—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å' })
    .uuid('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∞–≤—Ç–æ–º–æ–±–∏–ª—è'),

  user_id: z
    .string()
    .uuid('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    .nullable()
    .optional(),

  date: z
    .string({ required_error: '–î–∞—Ç–∞ —à—Ç—Ä–∞—Ñ–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞' })
    .regex(/^\d{4}-\d{2}-\d{2}$/, '–î–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD')
    .refine(
      (dateStr) => {
        const date = new Date(dateStr);
        const today = new Date();
        today.setHours(23, 59, 59, 999);
        return date <= today;
      },
      { message: '–î–∞—Ç–∞ —à—Ç—Ä–∞—Ñ–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º' }
    ),

  amount: z
    .number({
      required_error: '–°—É–º–º–∞ —à—Ç—Ä–∞—Ñ–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞',
      invalid_type_error: '–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º',
    })
    .positive('–°—É–º–º–∞ —à—Ç—Ä–∞—Ñ–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π')
    .max(99999.99, '–°—É–º–º–∞ —à—Ç—Ä–∞—Ñ–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è (–º–∞–∫—Å–∏–º—É–º 99,999.99‚Ç¨)'),

  description: z
    .string()
    .max(1000, '–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤)')
    .nullable()
    .optional(),

  photo_url: z
    .string()
    .url('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL —Ñ–∞–π–ª–∞ —à—Ç—Ä–∞—Ñ–∞')
    .nullable()
    .optional(),

  status: penaltyStatusSchema.default('open'),
});

// Type inference
export type PenaltyFormData = z.infer<typeof penaltySchema>;

// Schema for penalty creation
export const createPenaltySchema = penaltySchema;

// Schema for penalty update
export const updatePenaltySchema = penaltySchema.partial().required({ vehicle_id: true, date: true, amount: true });

// Export status options
export const PENALTY_STATUS_OPTIONS = [
  { value: 'open', label: 'üî¥ –û—Ç–∫—Ä—ã—Ç' },
  { value: 'paid', label: '‚úÖ –û–ø–ª–∞—á–µ–Ω' },
  { value: 'contested', label: '‚ö†Ô∏è –û—Å–ø–∞—Ä–∏–≤–∞–µ—Ç—Å—è' },
  { value: 'cancelled', label: '‚ùå –û—Ç–º–µ–Ω–µ–Ω' },
] as const;
