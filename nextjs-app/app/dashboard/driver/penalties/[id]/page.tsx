import { createServerClient } from '@/lib/supabase/server';
import { redirect } from 'next/navigation';
import Link from 'next/link';
import DriverPaymentForm from './DriverPaymentForm';

interface PageProps {
  params: Promise<{ id: string }>;
}

export default async function DriverPenaltyDetailPage({ params }: PageProps) {
  const supabase = await createServerClient();
  const { id: penaltyId } = await params;

  const {
    data: { user: authUser },
  } = await supabase.auth.getUser();

  if (!authUser) {
    redirect('/login');
  }

  // –ü–æ–ª—É—á–∞–µ–º —à—Ç—Ä–∞—Ñ
  const { data: penalty, error } = await supabase
    .from('penalties')
    .select('*')
    .eq('id', penaltyId)
    .eq('user_id', authUser.id) // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —à—Ç—Ä–∞—Ñ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤–æ–¥–∏—Ç–µ–ª—é
    .single();

  if (error || !penalty) {
    return (
      <div className="max-w-4xl">
        <div className="mb-6">
          <Link
            href="/dashboard/driver/penalties"
            className="text-green-600 hover:text-green-700 text-sm font-medium mb-4 inline-block"
          >
            ‚Üê –ù–∞–∑–∞–¥ –∫ —à—Ç—Ä–∞—Ñ–∞–º
          </Link>
          <h1 className="text-2xl md:text-3xl font-bold text-gray-900">
            üöß –®—Ç—Ä–∞—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω
          </h1>
        </div>

        <div className="bg-red-50 border border-red-200 rounded-lg p-6">
          <p className="text-red-800">–®—Ç—Ä–∞—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–º—É</p>
        </div>
      </div>
    );
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ
  const { data: vehicle } = await supabase
    .from('vehicles')
    .select('name, license_plate')
    .eq('id', penalty.vehicle_id)
    .single();

  const isOpen = penalty.status === 'open';
  const statusIcon = isOpen ? 'üî¥' : 'üü¢';
  const statusText = isOpen ? '–ö –æ–ø–ª–∞—Ç–µ' : '–û–ø–ª–∞—á–µ–Ω';
  const statusColor = isOpen ? 'text-red-600' : 'text-green-600';

  // –†–∞–∑–¥–µ–ª—è–µ–º —Ñ–æ—Ç–æ —à—Ç—Ä–∞—Ñ–∞ –∏ —á–µ–∫–∞ –æ–ø–ª–∞—Ç—ã
  const photos = penalty.photo_url ? penalty.photo_url.split(';') : [];
  const penaltyPhoto = photos[0] || null;
  const receiptPhoto = photos[1] || null;

  return (
    <div className="max-w-4xl space-y-6">
      <div className="mb-6">
        <Link
          href="/dashboard/driver/penalties"
          className="text-green-600 hover:text-green-700 text-sm font-medium mb-4 inline-block"
        >
          ‚Üê –ù–∞–∑–∞–¥ –∫ —à—Ç—Ä–∞—Ñ–∞–º
        </Link>
        <h1 className="text-2xl md:text-3xl font-bold text-gray-900">
          üöß –î–µ—Ç–∞–ª–∏ —à—Ç—Ä–∞—Ñ–∞
        </h1>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à—Ç—Ä–∞—Ñ–µ */}
      <div className="bg-white rounded-lg shadow p-6">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-bold">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à—Ç—Ä–∞—Ñ–µ</h2>
          <span className={`text-lg font-medium ${statusColor}`}>
            {statusIcon} {statusText}
          </span>
        </div>

        <div className="space-y-3">
          <div className="flex items-center justify-between border-b pb-3">
            <span className="text-gray-600">–î–∞—Ç–∞ —à—Ç—Ä–∞—Ñ–∞:</span>
            <span className="font-semibold">
              {new Date(penalty.date).toLocaleDateString('ru-RU')}
            </span>
          </div>

          <div className="flex items-center justify-between border-b pb-3">
            <span className="text-gray-600">–°—É–º–º–∞:</span>
            <span className="font-bold text-2xl text-gray-900">
              {parseFloat(penalty.amount || '0').toFixed(2)} ‚Ç¨
            </span>
          </div>

          {vehicle && (
            <div className="flex items-center justify-between border-b pb-3">
              <span className="text-gray-600">–ê–≤—Ç–æ–º–æ–±–∏–ª—å:</span>
              <span className="font-semibold">
                {vehicle.name} ({vehicle.license_plate})
              </span>
            </div>
          )}

          {penalty.description && (
            <div className="border-b pb-3">
              <p className="text-gray-600 mb-1">–û–ø–∏—Å–∞–Ω–∏–µ:</p>
              <p className="text-gray-900">{penalty.description}</p>
            </div>
          )}
        </div>
      </div>

      {/* –§–æ—Ç–æ —à—Ç—Ä–∞—Ñ–∞ */}
      {penaltyPhoto && (
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-bold mb-4">üì∑ –§–æ—Ç–æ —à—Ç—Ä–∞—Ñ–∞</h2>
          <div className="border rounded-lg p-2 bg-gray-50">
            <img
              src={penaltyPhoto}
              alt="Penalty photo"
              className="w-full h-auto max-h-96 object-contain rounded"
            />
          </div>
          <a
            href={penaltyPhoto}
            target="_blank"
            rel="noopener noreferrer"
            className="text-green-600 hover:text-green-700 text-sm font-medium mt-2 inline-block"
          >
            –û—Ç–∫—Ä—ã—Ç—å –≤ –ø–æ–ª–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ ‚Üí
          </a>
        </div>
      )}

      {/* –ß–µ–∫ –æ–ø–ª–∞—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å) */}
      {receiptPhoto && penalty.status === 'paid' && (
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-xl font-bold mb-4">üìÑ –ß–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ</h2>
          <div className="border rounded-lg p-2 bg-gray-50">
            <img
              src={receiptPhoto}
              alt="Receipt photo"
              className="w-full h-auto max-h-96 object-contain rounded"
            />
          </div>
          <a
            href={receiptPhoto}
            target="_blank"
            rel="noopener noreferrer"
            className="text-green-600 hover:text-green-700 text-sm font-medium mt-2 inline-block"
          >
            –û—Ç–∫—Ä—ã—Ç—å –≤ –ø–æ–ª–Ω–æ–º —Ä–∞–∑–º–µ—Ä–µ ‚Üí
          </a>
        </div>
      )}

      {/* –§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö) */}
      {isOpen && (
        <DriverPaymentForm
          penaltyId={penalty.id}
          amount={parseFloat(penalty.amount || '0')}
        />
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤ */}
      {!isOpen && (
        <div className="bg-green-50 border border-green-200 rounded-lg p-6">
          <div className="flex items-start gap-3">
            <div className="text-2xl">‚úÖ</div>
            <div className="text-sm text-green-900">
              <p className="font-semibold text-lg">–®—Ç—Ä–∞—Ñ –æ–ø–ª–∞—á–µ–Ω</p>
              <p className="mt-2">
                –≠—Ç–æ—Ç —à—Ç—Ä–∞—Ñ —É–∂–µ –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π. –ß–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω –≤—ã—à–µ.
              </p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
