'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { ErrorAlert } from '@/components/ErrorAlert';
import Link from 'next/link';

// Zod schema –¥–ª—è –∑–∞–ø—Ä–∞–≤–∫–∏
const refuelSchema = z.object({
  date: z.string().min(1, '–î–∞—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞'),
  amount: z
    .number()
    .positive('–°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π')
    .max(999999.99, '–°—É–º–º–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è'),
  odometer: z
    .string()
    .min(1, '–ü–æ–∫–∞–∑–∞–Ω–∏—è –æ–¥–æ–º–µ—Ç—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã')
    .regex(/^\d+$/, '–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã'),
  description: z.string().max(500, '–û–ø–∏—Å–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ').optional(),
});

type RefuelFormData = z.infer<typeof refuelSchema>;

interface RefuelFormProps {
  vehicleId: string;
  vehicleName: string;
}

export function RefuelForm({ vehicleId, vehicleName }: RefuelFormProps) {
  const router = useRouter();
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [filePreview, setFilePreview] = useState<string | null>(null);

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<RefuelFormData>({
    resolver: zodResolver(refuelSchema),
    defaultValues: {
      date: new Date().toISOString().split('T')[0],
    },
  });

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      setSelectedFile(file);

      // –°–æ–∑–¥–∞–µ–º preview
      const reader = new FileReader();
      reader.onloadend = () => {
        setFilePreview(reader.result as string);
      };
      reader.readAsDataURL(file);
    }
  };

  const onSubmit = async (data: RefuelFormData) => {
    if (!selectedFile) {
      setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ —á–µ–∫–∞');
      return;
    }

    setLoading(true);
    setError(null);

    try {
      const formData = new FormData();
      formData.append('vehicle_id', vehicleId);
      formData.append('category', 'fuel');
      formData.append('amount', data.amount.toString());
      formData.append('date', data.date);
      formData.append('description', `–û–¥–æ–º–µ—Ç—Ä: ${data.odometer} –∫–º${data.description ? `. ${data.description}` : ''}`);
      formData.append('receipt', selectedFile);

      const response = await fetch('/api/car-expenses', {
        method: 'POST',
        body: formData,
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø—Ä–∞–≤–∫–∏');
      }

      // –£—Å–ø–µ—Ö - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
      router.push('/dashboard/driver/refuel');
      router.refresh();
    } catch (err: any) {
      setError(err.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="space-y-6">
      {error && <ErrorAlert error={{ message: error, type: 'UNKNOWN' }} />}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ */}
      <div className="bg-green-50 border border-green-200 rounded-lg p-4">
        <p className="text-sm font-medium text-green-900">
          üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å: <span className="font-bold">{vehicleName}</span>
        </p>
      </div>

      <div className="bg-white rounded-lg border p-6 space-y-6">
        {/* –î–∞—Ç–∞ */}
        <div>
          <Label htmlFor="date">üìÖ –î–∞—Ç–∞ –∑–∞–ø—Ä–∞–≤–∫–∏ *</Label>
          <Input
            id="date"
            type="date"
            {...register('date')}
            className="mt-1"
            max={new Date().toISOString().split('T')[0]}
          />
          {errors.date && (
            <p className="text-red-500 text-sm mt-1">{errors.date.message}</p>
          )}
        </div>

        {/* –°—É–º–º–∞ */}
        <div>
          <Label htmlFor="amount">üí∞ –°—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞ (EUR) *</Label>
          <Input
            id="amount"
            type="number"
            step="0.01"
            placeholder="50.00"
            {...register('amount', { valueAsNumber: true })}
            className="mt-1"
          />
          {errors.amount && (
            <p className="text-red-500 text-sm mt-1">{errors.amount.message}</p>
          )}
        </div>

        {/* –ü–æ–∫–∞–∑–∞–Ω–∏—è –æ–¥–æ–º–µ—Ç—Ä–∞ */}
        <div>
          <Label htmlFor="odometer">üìä –ü–æ–∫–∞–∑–∞–Ω–∏—è –æ–¥–æ–º–µ—Ç—Ä–∞ (–∫–º) *</Label>
          <Input
            id="odometer"
            type="text"
            placeholder="45320"
            {...register('odometer')}
            className="mt-1"
          />
          <p className="text-sm text-gray-500 mt-1">
            –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–±–µ–≥ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö
          </p>
          {errors.odometer && (
            <p className="text-red-500 text-sm mt-1">{errors.odometer.message}</p>
          )}
        </div>

        {/* –§–æ—Ç–æ —á–µ–∫–∞ */}
        <div>
          <Label htmlFor="receipt">üì∑ –§–æ—Ç–æ —á–µ–∫–∞ *</Label>
          <Input
            id="receipt"
            type="file"
            accept="image/*"
            onChange={handleFileChange}
            className="mt-1"
          />
          <p className="text-sm text-gray-500 mt-1">
            –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ —Å –∑–∞–ø—Ä–∞–≤–∫–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
          </p>
          {!selectedFile && (
            <p className="text-orange-600 text-sm mt-1">
              ‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ —á–µ–∫–∞
            </p>
          )}

          {/* Preview —Ñ–æ—Ç–æ */}
          {filePreview && (
            <div className="mt-4">
              <p className="text-sm font-medium text-gray-700 mb-2">
                –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä:
              </p>
              <img
                src={filePreview}
                alt="Preview —á–µ–∫–∞"
                className="max-w-xs rounded-lg border shadow-sm"
              />
              <button
                type="button"
                onClick={() => {
                  setSelectedFile(null);
                  setFilePreview(null);
                  const input = document.getElementById('receipt') as HTMLInputElement;
                  if (input) input.value = '';
                }}
                className="text-sm text-red-600 hover:text-red-700 mt-2"
              >
                –£–¥–∞–ª–∏—Ç—å —Ñ–æ—Ç–æ
              </button>
            </div>
          )}
        </div>

        {/* –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ */}
        <div>
          <Label htmlFor="description">üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</Label>
          <textarea
            id="description"
            {...register('description')}
            className="mt-1 w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-green-500 focus:border-transparent"
            rows={3}
            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–æ–ª–Ω—ã–π –±–∞–∫, –∑–∞–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Ç—Ä–∞—Å—Å–µ –∏ —Ç.–¥."
          />
          {errors.description && (
            <p className="text-red-500 text-sm mt-1">
              {errors.description.message}
            </p>
          )}
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ */}
      <div className="flex gap-3">
        <Button
          type="submit"
          disabled={loading}
          className="flex-1 bg-green-600 hover:bg-green-700"
        >
          {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '‚úì –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—Ä–∞–≤–∫—É'}
        </Button>
        <Link
          href="/dashboard/driver"
          className="flex-1 px-4 py-2 text-center border border-gray-300 rounded-md hover:bg-gray-50 transition"
        >
          –û—Ç–º–µ–Ω–∞
        </Link>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="flex items-start gap-3">
          <div className="text-xl">‚ÑπÔ∏è</div>
          <div className="text-sm text-blue-900">
            <p className="font-semibold">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</p>
            <ul className="mt-2 space-y-1 list-disc list-inside">
              <li>–£–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É –∑–∞–ø—Ä–∞–≤–∫–∏</li>
              <li>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–∞ –≤ –µ–≤—Ä–æ</li>
              <li>–í–≤–µ–¥–∏—Ç–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è –æ–¥–æ–º–µ—Ç—Ä–∞ (–ø—Ä–æ–±–µ–≥)</li>
              <li>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞</li>
            </ul>
          </div>
        </div>
      </div>
    </form>
  );
}
