'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { z } from 'zod';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { ErrorAlert } from '@/components/ErrorAlert';

const fuelLimitsSchema = z.object({
  daily_limit: z
    .number()
    .positive('–î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º')
    .max(999999, '–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'),
  weekly_limit: z
    .number()
    .positive('–ù–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º')
    .max(999999, '–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'),
  monthly_limit: z
    .number()
    .positive('–ú–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º')
    .max(999999, '–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ'),
});

type FuelLimitsFormData = z.infer<typeof fuelLimitsSchema>;

export function FuelLimitsForm() {
  const router = useRouter();
  const [loading, setLoading] = useState(false);
  const [fetching, setFetching] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState(false);

  const {
    register,
    handleSubmit,
    formState: { errors },
    setValue,
  } = useForm<FuelLimitsFormData>({
    resolver: zodResolver(fuelLimitsSchema),
    defaultValues: {
      daily_limit: 400,
      weekly_limit: 800,
      monthly_limit: 1800,
    },
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ª–∏–º–∏—Ç–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    const fetchLimits = async () => {
      try {
        const response = await fetch('/api/fuel-limits');
        const result = await response.json();

        if (response.ok && result.data?.limits) {
          const limits = result.data.limits;
          setValue('daily_limit', Number(limits.daily_limit));
          setValue('weekly_limit', Number(limits.weekly_limit));
          setValue('monthly_limit', Number(limits.monthly_limit));
        }
      } catch (err: any) {
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã');
      } finally {
        setFetching(false);
      }
    };

    fetchLimits();
  }, [setValue]);

  const onSubmit = async (data: FuelLimitsFormData) => {
    setLoading(true);
    setError(null);
    setSuccess(false);

    try {
      const response = await fetch('/api/fuel-limits', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (!response.ok) {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤');
      }

      setSuccess(true);
      router.refresh();

      // –£–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => setSuccess(false), 3000);
    } catch (err: any) {
      setError(err.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  if (fetching) {
    return (
      <div className="bg-white rounded-lg border p-8 text-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
        <p className="text-gray-600 mt-4">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ª–∏–º–∏—Ç–æ–≤...</p>
      </div>
    );
  }

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="space-y-6">
      {error && <ErrorAlert error={{ message: error, type: 'UNKNOWN' }} />}

      {success && (
        <div className="bg-green-50 border border-green-200 rounded-lg p-4">
          <div className="flex items-center gap-3">
            <div className="text-2xl">‚úì</div>
            <div>
              <h3 className="font-semibold text-green-900">
                –õ–∏–º–∏—Ç—ã —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!
              </h3>
              <p className="text-sm text-green-700">
                –ù–æ–≤—ã–µ –ª–∏–º–∏—Ç—ã –±—É–¥—É—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å—Å—è –¥–ª—è –≤—Å–µ—Ö –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–∞–≤–æ–∫.
              </p>
            </div>
          </div>
        </div>
      )}

      <div className="bg-white rounded-lg border p-6 space-y-6">
        <h2 className="text-xl font-semibold text-gray-900">
          –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–∏–º–∏—Ç–æ–≤
        </h2>

        {/* –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç */}
        <div>
          <Label htmlFor="daily_limit">üìÖ –î–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç (EUR) *</Label>
          <Input
            id="daily_limit"
            type="number"
            step="0.01"
            placeholder="400.00"
            {...register('daily_limit', { valueAsNumber: true })}
            className="mt-1"
          />
          <p className="text-sm text-gray-500 mt-1">
            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –≤ –¥–µ–Ω—å
          </p>
          {errors.daily_limit && (
            <p className="text-red-500 text-sm mt-1">
              {errors.daily_limit.message}
            </p>
          )}
        </div>

        {/* –ù–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç */}
        <div>
          <Label htmlFor="weekly_limit">üìÜ –ù–µ–¥–µ–ª—å–Ω—ã–π –ª–∏–º–∏—Ç (EUR) *</Label>
          <Input
            id="weekly_limit"
            type="number"
            step="0.01"
            placeholder="800.00"
            {...register('weekly_limit', { valueAsNumber: true })}
            className="mt-1"
          />
          <p className="text-sm text-gray-500 mt-1">
            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –≤ –Ω–µ–¥–µ–ª—é (—Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ)
          </p>
          {errors.weekly_limit && (
            <p className="text-red-500 text-sm mt-1">
              {errors.weekly_limit.message}
            </p>
          )}
        </div>

        {/* –ú–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç */}
        <div>
          <Label htmlFor="monthly_limit">üóìÔ∏è –ú–µ—Å—è—á–Ω—ã–π –ª–∏–º–∏—Ç (EUR) *</Label>
          <Input
            id="monthly_limit"
            type="number"
            step="0.01"
            placeholder="1800.00"
            {...register('monthly_limit', { valueAsNumber: true })}
            className="mt-1"
          />
          <p className="text-sm text-gray-500 mt-1">
            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞ –≤ –º–µ—Å—è—Ü
          </p>
          {errors.monthly_limit && (
            <p className="text-red-500 text-sm mt-1">
              {errors.monthly_limit.message}
            </p>
          )}
        </div>
      </div>

      {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ */}
      <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
        <div className="flex items-start gap-3">
          <div className="text-xl">‚ö†Ô∏è</div>
          <div className="text-sm text-yellow-900">
            <p className="font-semibold mb-1">–í–∞–∂–Ω–æ:</p>
            <ul className="space-y-1 list-disc list-inside">
              <li>–õ–∏–º–∏—Ç—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "—Ç–æ–ø–ª–∏–≤–æ"</li>
              <li>–°–∏—Å—Ç–µ–º–∞ –ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–∞–≤–∫—É –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞</li>
              <li>–í–æ–¥–∏—Ç–µ–ª—å –≤–∏–¥–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–æ –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å</li>
              <li>–í—Å–µ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–æ–º</li>
            </ul>
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ */}
      <div className="flex gap-3">
        <Button
          type="submit"
          disabled={loading}
          className="flex-1 bg-blue-600 hover:bg-blue-700"
        >
          {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∏–º–∏—Ç—ã'}
        </Button>
        <Button
          type="button"
          variant="outline"
          onClick={() => router.push('/dashboard')}
          className="flex-1"
        >
          –û—Ç–º–µ–Ω–∞
        </Button>
      </div>
    </form>
  );
}
